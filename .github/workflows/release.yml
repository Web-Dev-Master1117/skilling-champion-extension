on:
  push:
    tags:
    - 'v*' 

name: Release and Upload Assets

jobs:
  build:
    name: Release and Upload Assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set git tag output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Patch manifest (add tag)
        run: |
          $currentTag = "${{ steps.vars.outputs.tag }}"
          $manifest = Get-Content manifest.json | ConvertFrom-Json
          $manifest.version = $currentTag -replace 'v?'
          $manifest | ConvertTo-Json | Set-Content manifest.json -Encoding UTF8
        shell: pwsh
        working-directory: ./src/
      - name: Build project
        run: |
          zip -r -j src src/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./src.zip
          asset_name: src.zip
          asset_content_type: application/zip